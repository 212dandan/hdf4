.\" WARNING! THIS FILE WAS GENERATED AUTOMATICALLY BY c2man!
.\" DO NOT EDIT! CHANGES MADE TO THIS FILE WILL BE LOST!
.TH "mfan" 3 "2 October 1996" "c2man mfan.h"
.SH "NAME"
ANstart,
ANfileinfo,
ANend,
ANcreate,
ANcreatef,
ANselect,
ANnumann,
ANannlist,
ANannlen,
ANwriteann,
ANreadann,
ANendaccess,
ANget_tagref,
ANid2tagref,
ANtagref2id,
ANatype2tag,
ANtag2atype \- Multi-File Annotation Routines
.SH "SYNOPSIS"
.ft B
#include <mfan.h>
.sp
extern int32 ANstart(int32 file_id);
.sp
extern intn ANfileinfo
.br
(
.br
	int32 an_id,
.br
	int32 *n_file_label,
.br
	int32 *n_file_desc,
.br
	int32 *n_obj_label,
.br
	int32 *n_obj_desc
.br
);
.sp
extern int32 ANend(int32 an_id);
.sp
extern int32 ANcreate
.br
(
.br
	int32 an_id,
.br
	uint16 elem_tag,
.br
	uint16 elem_ref,
.br
	ann_type type
.br
);
.sp
extern int32 ANcreatef
.br
(
.br
	int32 an_id,
.br
	ann_type type
.br
);
.sp
extern int32 ANselect
.br
(
.br
	int32 an_id,
.br
	int32 index,
.br
	ann_type type
.br
);
.sp
extern intn ANnumann
.br
(
.br
	int32 an_id,
.br
	ann_type type,
.br
	uint16 elem_tag,
.br
	uint16 elem_ref
.br
);
.sp
extern intn ANannlist
.br
(
.br
	int32 an_id,
.br
	ann_type type,
.br
	uint16 elem_tag,
.br
	uint16 elem_ref,
.br
	int32 ann_list[]
.br
);
.sp
extern int32 ANannlen(int32 ann_id);
.sp
extern int32 ANwriteann
.br
(
.br
	int32 ann_id,
.br
	const char *ann,
.br
	int32 annlen
.br
);
.sp
extern int32 ANreadann
.br
(
.br
	int32 ann_id,
.br
	char *ann,
.br
	int32 maxlen
.br
);
.sp
extern intn ANendaccess(int32 ann_id);
.sp
extern int32 ANget_tagref
.br
(
.br
	int32 an_id,
.br
	int32 index,
.br
	ann_type type,
.br
	uint16 *ann_tag,
.br
	uint16 *ann_ref
.br
);
.sp
extern int32 ANid2tagref
.br
(
.br
	int32 ann_id,
.br
	uint16 *ann_tag,
.br
	uint16 *ann_ref
.br
);
.sp
extern int32 ANtagref2id
.br
(
.br
	int32 an_id,
.br
	uint16 ann_tag,
.br
	uint16 ann_ref
.br
);
.sp
extern uint16 ANatype2tag(ann_type atype);
.sp
extern ann_type ANtag2atype(uint16 atag);
.ft R
.SH "PARAMETERS"
.TP
.B "int32 file_id"
IN: file to start annotation access on.
.TP
.BR "int32 an_id" "	(ANfileinfo)"
IN:  annotation interface id.
.TP
.B "int32 *n_file_label"
OUT: the # of file labels.
.TP
.B "int32 *n_file_desc"
OUT: the # of file descriptions.
.TP
.B "int32 *n_obj_label"
OUT: the # of object labels.
.TP
.B "int32 *n_obj_desc"
OUT: the # of object descriptions.
.TP
.BR "int32 an_id" "	(ANend)"
IN: Annotation ID of file to close.
.TP
.BR "int32 an_id" "	(ANcreate)"
IN: annotation interface ID.
.TP
.BR "uint16 elem_tag" "	(ANcreate)"
IN: tag of item to be assigned annotation.
.TP
.BR "uint16 elem_ref" "	(ANcreate)"
IN: reference number of itme to be assigned ann.
.TP
.BR "ann_type type" "	(ANcreate)"
IN: annotation type.
.sp
Possible values for an \fBann_type\fR are as follows:
.RS 0.75in
.PD 0
.ft B
.nr TL \w'AN_DATA_LABEL'u+0.2i
.ft R
.TP \n(TLu
\fBAN_UNDEF\fR

.TP \n(TLu
\fBAN_DATA_LABEL\fR
Data label.
.TP \n(TLu
\fBAN_DATA_DESC\fR
Data description.
.TP \n(TLu
\fBAN_FILE_LABEL\fR
File label.
.TP \n(TLu
\fBAN_FILE_DESC\fR
File description.
.RE
.PD
.TP
.BR "ann_type type" "	(ANcreatef)"
IN:  annotation type.
.sp
Possible values for an \fBann_type\fR are as follows:
.RS 0.75in
.PD 0
.ft B
.nr TL \w'AN_DATA_LABEL'u+0.2i
.ft R
.TP \n(TLu
\fBAN_UNDEF\fR

.TP \n(TLu
\fBAN_DATA_LABEL\fR
Data label.
.TP \n(TLu
\fBAN_DATA_DESC\fR
Data description.
.TP \n(TLu
\fBAN_FILE_LABEL\fR
File label.
.TP \n(TLu
\fBAN_FILE_DESC\fR
File description.
.RE
.PD
.TP
.BR "int32 index" "	(ANselect)"
IN: index of annottion to get ID for.
.TP
.BR "int32 an_id" "	(ANnumann)"
IN: annotation interface id.
.TP
.BR "uint16 elem_tag" "	(ANnumann)"
IN: tag of item of which this is annotation.
.TP
.BR "uint16 elem_ref" "	(ANnumann)"
IN: ref of item of which this is annotation.
.TP
.B "int32 ann_list[]"
OUT: array of ann_id's that match criteria.
.TP
.BR "int32 ann_id" "	(ANannlen)"
IN: annotation id.
.TP
.B "const char *ann"
IN: annotation to write.
.TP
.B "int32 annlen"
IN: length of annotation.
.TP
.BR "int32 ann_id" "	(ANreadann)"
IN: annotation id (handle).
.TP
.B "char *ann"
OUT: space to return annotation in.
.TP
.B "int32 maxlen"
IN: size of space to return annotation in.
.TP
.BR "int32 index" "	(ANget_tagref)"
IN: index of annottion to get tag/ref for.
.TP
.B "uint16 *ann_tag"
OUT: Tag for annotation.
.TP
.B "uint16 *ann_ref"
OUT: ref for annotation.
.TP
.BR "int32 an_id" "	(ANtagref2id)"
IN  Annotation interface id.
.TP
.B "uint16 ann_tag"
IN: Tag for annotation.
.TP
.B "uint16 ann_ref"
IN: ref for annotation.
.TP
.B "ann_type atype"
IN: Annotation type.
.sp
Possible values for an \fBann_type\fR are as follows:
.RS 0.75in
.PD 0
.ft B
.nr TL \w'AN_DATA_LABEL'u+0.2i
.ft R
.TP \n(TLu
\fBAN_UNDEF\fR

.TP \n(TLu
\fBAN_DATA_LABEL\fR
Data label.
.TP \n(TLu
\fBAN_DATA_DESC\fR
Data description.
.TP \n(TLu
\fBAN_FILE_LABEL\fR
File label.
.TP \n(TLu
\fBAN_FILE_DESC\fR
File description.
.RE
.PD
.TP
.B "uint16 atag"
IN: annotation tag.
.SH "DESCRIPTION"
.SS "ANstart"
Start annotation handling on the file return a annotation ID to the file.
.SS "ANfileinfo"
Reports general information about the number of file and object(i.e. Data)
annotations in the file. This routine is generally used to find
the range of acceptable indices for ANselect calls.
.SS "ANend"
End annotation access to file.
.SS "ANcreate"
Creates a data annotation, returns an 'an_id' to work with the new
annotation which can either be a label or description.
Valid annotation types are AN_DATA_LABEL for data labels and
AN_DATA_DESC for data descriptions.
.SS "ANcreatef"
Creates a file annotation, returns an 'an_id' to work with the new
file annotation which can either be a label or description.
Valid annotation types are AN_FILE_LABEL for file labels and
AN_FILE_DESC for file descritpions.
.SS "ANselect"
Get an annotation Id from index of 'type'.
The position index is ZERO based.
.SS "ANnumann"
Find number of annotation of 'type' for the given element
tag/ref pair.
.SS "ANannlist"
Find and generate list of annotation ids of 'type' for the given
element tag/ref pair.
.SS "ANannlen"
Uses the annotation id to find ann_key & file_id.
.SS "ANwriteann"
Checks for pre-existence of given annotation, replacing old one if it
exists. Writes out annotation.
.SS "ANreadann"
Gets tag and ref of annotation.  Finds DD for that annotation.
Reads the annotation, taking care of NULL terminator, if necessary.
.SS "ANendaccess"
Terminates access to an annotation. For now does nothing.
.SS "ANget_tagref"
The position index is zero based.
.SS "ANid2tagref"
Uses the annotation id to find ann_node entry which contains ann_ref.
.SS "ANtagref2id"
Gets the annotation id of the annotation given the tag/ref of
the annotation itself and the annotation interface id.
.SS "ANatype2tag"
Translate annotation type to corresponding TAG.
.SS "ANtag2atype"
Translate annotation TAG to corresponding atype.
.SH "RETURNS"
.SS "ANstart"
A file ID or FAIL.
.SS "ANfileinfo"
Returns SUCCEED if successful and FAIL othewise.
.SS "ANend"
SUCCEED if successful and  FAIL otherwise.
.SS "ANcreate"
An ID to an annotation which can either be a label or description.
.SS "ANcreatef"
An ID to an annotation which can either be a file label or description.
.SS "ANselect"
An ID to an annotation type which can either be a label or description.
.SS "ANnumann"
Number of annotation found if successful and FAIL (-1) otherwise.
.SS "ANannlist"
Number of annotations ids found if successful and FAIL (-1) otherwise.
.SS "ANannlen"
Length of annotation if successful and FAIL (-1) otherwise.
.SS "ANwriteann"
SUCCEED (0) if successful and FAIL (-1) otherwise.
.SS "ANreadann"
SUCCEED (0) if successful and FAIL (-1) otherwise.
.SS "ANendaccess"
SUCCEED(0) or FAIL(-1)
.SS "ANget_tagref"
A tag/ref pairt to an annotation type which can either be a
label or description given the annotation ID.
.SS "ANid2tagref"
SUCCEED(0) if successful and FAIL (-1) otherwise.
.SS "ANtagref2id"
Annotation id of annotation if successful and FAIL(-1) otherwise.
.SS "ANatype2tag"
Returns TAG corresponding to annotatin type.
.SS "ANtag2atype"
Returns type corresponding to annotatin TAG.
.sp
Possible values for an \fBextern ann_type\fR are as follows:
.RS 0.75in
.PD 0
.ft B
.nr TL \w'AN_DATA_LABEL'u+0.2i
.ft R
.TP \n(TLu
\fBAN_UNDEF\fR

.TP \n(TLu
\fBAN_DATA_LABEL\fR
Data label.
.TP \n(TLu
\fBAN_DATA_DESC\fR
Data description.
.TP \n(TLu
\fBAN_FILE_LABEL\fR
File label.
.TP \n(TLu
\fBAN_FILE_DESC\fR
File description.
.RE
.PD
.SH "NAME"
.SS "ANstart"
ANstart - open file for annotation handling.
.SS "ANfileinfo"
ANfileinfo - Report high-level information about the ANxxx interface for a given file.
.SS "ANend"
ANend - End annotation access to file file.
.SS "ANcreate"
ANcreate - create a new element annotation and return a handle(id).
.SS "ANcreatef"
ANcreatef - create a new file annotation and return a handle(id).
.SS "ANselect"
ANselect - get an annotation ID from index of 'type'.
.SS "ANnumann"
ANnumann - find number of annotation of 'type' that  match the given element tag/ref.
.SS "ANannlist"
ANannlist - generate list of annotation ids of 'type' that match the given element tag/ref.
.SS "ANannlen"
ANannlen - get length of annotation givne annotation id.
.SS "ANwriteann"
ANwriteann - write annotation given ann_id.
.SS "ANreadann"
ANreadann - read annotation given ann_id.
.SS "ANendaccess"
ANendaccess - end access to an annotation given it's id.
.SS "ANget_tagref"
ANget_tagref - get tag/ref pair to annotation ID.
.SS "ANid2tagref"
ANid2tagref -- get tag/ref given annotation id.
.SS "ANtagref2id"
ANtagref2id -- get annotation id given tag/ref.
.SS "ANatype2tag"
ANatype2tag - annotation type to corresponding annotation TAG.
.SS "ANtag2atype"
ANtag2atype - annotation TAG to corresponding annotation type.
