#
# $Header$
#
# $Log$
# Revision 1.3  1992/04/27 17:01:33  sxu
# Added Fortran test  programs: tdfr8F, tdf24F, tdfpF, tdfsd_ntF
#      tdfsd_nntF, tdfsd_mmsF, tdfsd_nmmsF, tdfanF, tdfanfileF
#      and tdfstubsF
#
# Revision 1.2  1992/03/24  20:40:09  sxu
# Bugs fixed in lib and include directories
#
# Revision 1.1  1992/03/01  23:39:01  mfolk
# Initial revision
#
#

# ##################################################################
#
#                   NCSA HDF Version 3.2 release Beta 1
#                               March 1992
#                  MAKEFILE for testing HDF Version 3.2
#
#                          ABOUT THIS MAKEFILE
#
# This makefile creates HDF test programs.  There are three categories
# of test programs: 
#
#              application layer C test programs 
#              application layer FORTRAN test programs 
#              lower level C test programs 
#
# The application layer C test programs are:
#
#              tdfr8     (8-bit raster image sets)
#              tdf24     (24-bit raster image sets)
#              tdfp      (palettes)
#              tdfsd_nt  (scientific data sets, data only)
#              tdfsd_nnt (same as tdfsd_nt with native number types)
#              tdfsd_mms (scientific data sets, data, max/min and scales)
#              tdfsd_nmms(same as tdfsd_mms with native number types)
#              tdfan     (annotations for HDF objects)
#              tdfanfile (annotations for HDF files)
#              tdfstubs  (emulation of old lower level i/o routines)
#
# The application layer FORTRAN test programs are:
#
#              tdfr8F     (8-bit raster image sets)
#              tdf24F     (24-bit raster image sets)
#              tdfp       (Palettes)
#              tdfsd_ntF  (scientific data sets, data only)
#              tdfsd_nntF (same as tdfsd_nntF except all data types are native 
#                           machine number types)
#              tdfsd_mmsF (scientific data sets, data, max/min and scales)
#	       tdfsd_nmmsF(same as tdfsd_mmsF with native number types)
#              tdfanF     (annotations for HDF objects)
#              tdfanfileF (annotations for HDF files)
#              tdfstubsF  (emulation of old lower level i/o routines)
#
# The lower level C test programs are:
#
#              thfile     (basic i/o)
#              terr       (error handling)
#              thblocks   (linked blocks)
#              thextelt   (i/o involving external files)
#              tvers      (storing and retrieving version strings)
#              thlinkage  (linkage of functions)
#
# ##################################################################
#
#                      HOW TO USE THIS MAKEFILE
#
# You need libdf.a to compile any of these test programs.  You will
# also need selected header files as described below.
#
# To compile the application layer C test programs, enter "make ctests".  
# If there are test programs that you do not want to compile, do this 
# by removing them from the lines "COBJS=" and "CSRCS=" below.
# You need access to the header files indicated in the "CHDRS=" line
# below to compile these programs. 
#
# To compile the application layer FORTRAN test programs, enter 
# "make ftests".  You need access to the header files indicated in 
# the "FHDRS=" line below to compile these programs. 
# If there are test programs that you do not want to compile, do this 
# by removing them from the lines "FOBJS=" and "FSRCS=" below.
#
# To compile the lower level C test programs, enter "make htests". 
# You need access to the header files indicated in the "HHDRS=" line
# below to compile these programs.  If there are test programs that 
# you do not want to compile, do this by removing them from the lines 
# "HOBJS=" and "HSRCS=" below.
#
# To remove all object files created by this makefile, enter "make clean"
#
# To remove ALL files created by this makefile, enter "make cleanup"
#
# ##################################################################
#
#                       PORTING INSTRUCTIONS
#
# You must modify the lines containing the symbol "==>" to make
# this makefile compatible with your platform.
#
# ##################################################################

# ==> specify your machine
MACHINE=SUN

# ==> specify your fortran compiler
FC=f77 
FFLAGS=  -g

# ==> specify your C compiler
CC=cc
CFLAGS=  -g -D${MACHINE} $(IFLAGS)

# ==> where are your hdf.h, hdfi.h and vg.h files located?
IFLAGS=   -I../include -I.

# ==> where is your HDF library (libdf.a) located?
LIBS= ../lib/libdf.a

RM=/bin/rm
RMFLAGS=-f

CTESTS= tdfr8 tdf24 tdfsd_mms tdfsd_nmms tdfsd_nnt tdfsd_nt tdfan \
        tdfanfile tdfp tdfstubs 
CHDRS = df.h dfi.h dfsd.h vg.h df.h dfi.h dfstubs.h
CTSRCS= tdfr8.c tdf24.c tdfsd_mms.c tdfsd_nmms.c tdfsd_nnt.c \
        tdfsd_nt.c tdfan.c tdfanfile.c tdfp.c tdfstubs.c 
CTOBJS= tdfr8.o tdf24.o tdfsd_mms.o tdfsd_nt.o tdfan.o tdfanfile.o \
        tdfp.o tdfstubs.o 

HTESTS= thfile thfile1 terr thblocks thextelt 
HHDRS = hfile.h hdf.h hdfi.h herr.h hproto.h 
HTSRCS= thfile.c thfile1.c terr.c thblocks.c thextelt.c 
HTOBJS= thfile.o thfile1.o terr.o thblocks.o thextelt.o

FTESTS= tdfr8F tdf24F tdfpF tdfanF tdfanfileF tdfsd_ntF tdfsd_nntF \
        tdfsd_mmsF tdfsd_nmmsF tdfstubsF
FSRCS = tdfr8F.f tdf24F.f tdfpF.f tdfanF.f tdfanfileF.f tdfsd_ntF.f \
        tdfsd_nntF.f tdfsd_mmsF.f  tdfsd_nmmsF.f tdfstubsF.f
FOBJS = tdfr8F.o tdf24F.o tdfpF.o tdfanF.o tdfanfileF.o tdfsd_ntF.o \
        tdfsd_nntF.o tdfsd_mmsF.o tdfsd_nmmsF.o tdfstubsF.o

all: ctests ftests htests

ctests: $(CTESTS)

ftests: $(FTESTS)

htests: $(HTESTS)
	
tdfr8:  tdfr8.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfr8.c $(LIBS) -o tdfr8

tdf24:  tdf24.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdf24.c $(LIBS) -o tdf24

tdfp:   tdfp.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfp.c $(LIBS) -o tdfp

tdfsd_nt:    tdfsd_nt.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfsd_nt.c $(LIBS) -o tdfsd_nt

tdfsd_mms:    tdfsd_mms.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfsd_mms.c $(LIBS) -o tdfsd_mms

tdfsd_nnt:    tdfsd_nnt.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfsd_nnt.c $(LIBS) -o tdfsd_nnt

tdfsd_nmms:    tdfsd_nmms.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfsd_nmms.c $(LIBS) -o tdfsd_nmms

tdfan:  tdfan.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfan.c $(LIBS) -o tdfan

tdfanfile:     tdfanfile.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfanfile.c $(LIBS) -o tdfanfile


tdfstubs:     tdfstubs.c 
	$(CC) $(CFLAGS) -D$(MACHINE) tdfstubs.c $(LIBS) -o tdfstubs

tdfr8F:	       tdfr8F.f
	$(FC) $(FFLAGS) tdfr8F.f $(LIBS) -o tdfr8F 

tdf24F:		tdf24F.f
	$(FC) $(FFLAGS) tdf24F.f $(LIBS) -o tdf24F

tdfanF:		tdfanF.f
	$(FC) $(FFLAGS) tdfanF.f $(LIBS) -o tdfanF

tdfanfileF:   tdfanfileF.f
	$(FC) $(FFLAGS) tdfanfileF.f $(LIBS)  -o tdfanfileF

tdfpF:   tdfpF.f
	$(FC) $(FFLAGS) tdfpF.f $(LIBS)  -o tdfpF

tdfstubsF:   tdfstubsF.f
	$(FC) $(FFLAGS) tdfstubsF.f $(LIBS)  -o tdfstubsF

tdfsd_ntF:   tdfsd_ntF.f
	$(FC) $(FFLAGS) tdfsd_ntF.f $(LIBS)  -o tdfsd_ntF 

tdfsd_nntF:   tdfsd_nntF.f
	$(FC) $(FFLAGS) tdfsd_nntF.f $(LIBS)  -o tdfsd_nntF

tdfsd_mmsF:   tdfsd_mmsF.f 
	$(FC) $(FFLAGS) tdfsd_mmsF.f $(LIBS) -o tdfsd_mmsF

tdfsd_nmmsF:   tdfsd_nmmsF.f 
	$(FC) $(FFLAGS) tdfsd_nmmsF.f $(LIBS) -o tdfsd_nmmsF

thfile:     thfile.c 
	$(CC) $(CFLAGS) -D$(MACHINE) thfile.c $(LIBS) -o thfile

thfile1:     thfile1.c 
	$(CC) $(CFLAGS) -D$(MACHINE) thfile1.c $(LIBS) -o thfile1

terr:     terr.c 
	$(CC) $(CFLAGS) -D$(MACHINE) terr.c $(LIBS) -o terr

thblocks:     thblocks.c 
	$(CC) $(CFLAGS) -D$(MACHINE) thblocks.c $(LIBS) -o thblocks

thextelt:     thextelt.c
	$(CC) $(CFLAGS) -D$(MACHINE) thextelt.c $(LIBS) -o thextelt


